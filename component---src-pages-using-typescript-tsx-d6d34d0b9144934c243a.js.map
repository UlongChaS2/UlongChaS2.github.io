{"version":3,"file":"component---src-pages-using-typescript-tsx-d6d34d0b9144934c243a.js","mappings":"uKAgDA,IAhCA,SAAYA,GAA8C,IAADC,EAAAC,EAAA,IAA5C,MAAEC,EAAK,YAAEC,EAAW,SAAEC,GAAoBL,EACrD,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAY1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBT,EAAGK,EAAKG,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBE,MAExC,OACEQ,EAAAA,EAAAA,GAAAC,EAAAA,SAAA,MACED,EAAAA,EAAAA,GAAA,aAAQD,EAAe,GAAGP,OAAWO,IAAiBP,IACtDQ,EAAAA,EAAAA,GAAA,QAAME,KAAK,cAAcC,QAASN,KAClCG,EAAAA,EAAAA,GAAA,QAAMI,SAAS,WAAWD,QAASX,KACnCQ,EAAAA,EAAAA,GAAA,QAAMI,SAAS,iBAAiBD,QAASN,KACzCG,EAAAA,EAAAA,GAAA,QAAMI,SAAS,UAAUD,QAAQ,aACjCH,EAAAA,EAAAA,GAAA,QAAME,KAAK,eAAeC,QAAQ,aAClCH,EAAAA,EAAAA,GAAA,QAAME,KAAK,kBAAkBC,SAA0B,QAAjBZ,EAAAI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBc,SAAU,MACnEL,EAAAA,EAAAA,GAAA,QAAME,KAAK,gBAAgBC,QAASX,KACpCQ,EAAAA,EAAAA,GAAA,QAAME,KAAK,sBAAsBC,QAASN,IACzCH,EAGP,C,6GCjCA,MAwBaY,EAA0BA,KAAMN,EAAAA,EAAAA,GAACO,EAAAA,EAAG,CAACf,MAAM,mBAAmBC,iBAAae,EAAWd,cAAUc,IAE7G,UA1BwDnB,IAAA,IAAC,KAAEoB,EAAI,SAAEC,GAAUrB,EAAA,OACzEW,EAAAA,EAAAA,GAACW,EAAAA,EAAM,MACLX,EAAAA,EAAAA,GAAA,UAAI,oBACcA,EAAAA,EAAAA,GAAA,SAAG,2BAErBA,EAAAA,EAAAA,GAAA,SAAG,6CACwCA,EAAAA,EAAAA,GAAA,YAAM,YAAe,2CAAuCA,EAAAA,EAAAA,GAAA,YAAM,YAAgB,IAAI,qCAC9FA,EAAAA,EAAAA,GAAA,YAAM,oBAAuB,OAEhEA,EAAAA,EAAAA,GAAA,SAAG,6CACwCA,EAAAA,EAAAA,GAAA,YAAM,cAAiB,qBAAiBA,EAAAA,EAAAA,GAAA,YAAM,cAAiB,eAAa,KACrHA,EAAAA,EAAAA,GAAA,YAAM,YAAe,WAEvBA,EAAAA,EAAAA,GAAA,SAAG,iCAC4BA,EAAAA,EAAAA,GAAA,YAAOU,EAASE,UAAgB,uBAAqBH,EAAKd,KAAKkB,UAAU,MAExGb,EAAAA,EAAAA,GAAA,SAAG,kCAC+B,KAChCA,EAAAA,EAAAA,GAAA,KAAGc,KAAK,yEAAwE,kCAAkC,MAEpHd,EAAAA,EAAAA,GAACe,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/seo.tsx","webpack://gatsby-starter-default/./src/pages/using-typescript.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SeoProps {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n}\n\nfunction Seo({ title, description, children }: SeoProps) {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","// If you don't want to use TypeScript you can delete this file!\nimport * as React from 'react';\nimport { PageProps, Link, graphql, HeadFC } from 'gatsby';\n\nimport Layout from '../components/GlobalLayout';\nimport Seo from '../components/seo';\n\ntype DataProps = {\n  site: {\n    buildTime: string;\n  };\n};\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, location }) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for your pages, components, and <code>gatsby-*</code>{' '}\n      configuration files (for example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm and run <code>tsc --init</code> to create a{' '}\n      <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{' '}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">documentation about TypeScript</a>.\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n);\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" description={undefined} children={undefined} />;\n\nexport default UsingTypescript;\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","title","description","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","___EmotionJSX","React","name","content","property","author","Head","Seo","undefined","data","location","Layout","pathname","buildTime","href","Link","to"],"sourceRoot":""}