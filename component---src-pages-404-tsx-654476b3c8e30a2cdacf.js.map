{"version":3,"file":"component---src-pages-404-tsx-654476b3c8e30a2cdacf.js","mappings":"gNAKA,MAOaA,EAAOA,KAAMC,EAAAA,EAAAA,GAACC,EAAAA,EAAG,CAACC,MAAM,mBAErC,UATqBC,KACnBH,EAAAA,EAAAA,GAACI,EAAAA,EAAM,MACLJ,EAAAA,EAAAA,GAAA,UAAI,mBACJA,EAAAA,EAAAA,GAAA,SAAG,2D,yDCwCP,IAhCA,SAAYK,GAA8C,IAADC,EAAAC,EAAA,IAA5C,MAAEL,EAAK,YAAEM,EAAW,SAAEC,GAAoBJ,EACrD,MAAM,KAAEK,IAASC,EAAAA,EAAAA,gBAAe,YAY1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBJ,MAExC,OACEF,EAAAA,EAAAA,GAAAe,EAAAA,SAAA,MACEf,EAAAA,EAAAA,GAAA,aAAQc,EAAe,GAAGZ,OAAWY,IAAiBZ,IACtDF,EAAAA,EAAAA,GAAA,QAAMgB,KAAK,cAAcC,QAASL,KAClCZ,EAAAA,EAAAA,GAAA,QAAMkB,SAAS,WAAWD,QAASf,KACnCF,EAAAA,EAAAA,GAAA,QAAMkB,SAAS,iBAAiBD,QAASL,KACzCZ,EAAAA,EAAAA,GAAA,QAAMkB,SAAS,UAAUD,QAAQ,aACjCjB,EAAAA,EAAAA,GAAA,QAAMgB,KAAK,eAAeC,QAAQ,aAClCjB,EAAAA,EAAAA,GAAA,QAAMgB,KAAK,kBAAkBC,SAA0B,QAAjBV,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBY,SAAU,MACnEnB,EAAAA,EAAAA,GAAA,QAAMgB,KAAK,gBAAgBC,QAASf,KACpCF,EAAAA,EAAAA,GAAA,QAAMgB,KAAK,sBAAsBC,QAASL,IACzCH,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/404.tsx","webpack://gatsby-starter-default/./src/components/seo.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Layout from '../components/GlobalLayout';\nimport Seo from '../components/seo';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>404: Not Found</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport const Head = () => <Seo title=\"404: Not Found\" />;\n\nexport default NotFoundPage;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface SeoProps {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n}\n\nfunction Seo({ title, description, children }: SeoProps) {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n"],"names":["Head","___EmotionJSX","Seo","title","NotFoundPage","Layout","_ref","_site$siteMetadata","_site$siteMetadata2","description","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","author"],"sourceRoot":""}