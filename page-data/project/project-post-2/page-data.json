{"componentChunkName":"component---src-templates-project-template-tsx","path":"/project/project-post-2/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"할 일 관리 앱 만들기","date":"2025년 01월 22일","category":"project","featuredImage":null},"html":"<p>React와 Local Storage를 활용한 간단하지만 실용적인 할 일 관리 앱을 만들어봤습니다.</p>\n<h2>프로젝트 소개</h2>\n<p>일상적인 할 일을 관리할 수 있는 웹 애플리케이션입니다.</p>\n<h3>주요 기능</h3>\n<ul>\n<li>✅ 할 일 추가/삭제/완료</li>\n<li>🏷️ 카테고리별 분류</li>\n<li>🔍 검색 기능</li>\n<li>💾 로컬 스토리지 저장</li>\n</ul>\n<h2>구현 과정</h2>\n<h3>1. 상태 관리</h3>\n<p>React Hooks를 활용하여 상태를 관리했습니다.</p>\n<pre><code class=\"language-javascript\">const [todos, setTodos] = useState([]);\nconst [filter, setFilter] = useState('all');\n\nconst addTodo = (text) => {\n  const newTodo = {\n    id: Date.now(),\n    text,\n    completed: false,\n    createdAt: new Date().toISOString(),\n  };\n  setTodos([...todos, newTodo]);\n};\n</code></pre>\n<h3>2. 로컬 스토리지 연동</h3>\n<p>데이터를 브라우저에 저장하여 새로고침 후에도 데이터를 유지합니다.</p>\n<pre><code class=\"language-javascript\">useEffect(() => {\n  const savedTodos = localStorage.getItem('todos');\n  if (savedTodos) {\n    setTodos(JSON.parse(savedTodos));\n  }\n}, []);\n\nuseEffect(() => {\n  localStorage.setItem('todos', JSON.stringify(todos));\n}, [todos]);\n</code></pre>\n<h3>3. 필터링 기능</h3>\n<p>완료된 할 일과 미완료 할 일을 필터링할 수 있습니다.</p>\n<pre><code class=\"language-javascript\">const filteredTodos = todos.filter((todo) => {\n  if (filter === 'completed') return todo.completed;\n  if (filter === 'active') return !todo.completed;\n  return true;\n});\n</code></pre>\n<h2>개선 사항</h2>\n<ul>\n<li>드래그 앤 드롭으로 순서 변경</li>\n<li>마감일 설정 기능</li>\n<li>중요도 표시</li>\n<li>모바일 앱으로 확장</li>\n</ul>\n<h2>마무리</h2>\n<p>간단한 프로젝트였지만 React의 기본 개념을 실습하기에 좋은 프로젝트였습니다.</p>","timeToRead":1}},"pageContext":{"slug":"/project-post-2/"}},"staticQueryHashes":["3649515864"],"slicesMap":{}}